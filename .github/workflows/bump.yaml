name: Bump version

on:
  pull_request:
  workflow_dispatch:
    inputs:
      bump_rule:
        type: choice
        description: How to bump the project's version (see https://python-poetry.org/docs/cli/#version)
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
        required: true

jobs:
  bump_version:
    name: "Bump version and create changelog"
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    env:
      CI_COMMIT_EMAIL: "ci-runner@input4mips-validation.invalid"
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"

      # Install the package and towncrier with pixi
      - uses: ./.github/actions/setup
        with:
          pixi-environments: "all-dev"

      # Also need pdm for the bump
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.9"
      - name: Install pdm-bump
        run: |
          pdm self add pdm-bump

      - name: Create bump and changelog
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$CI_COMMIT_EMAIL"

          # Bump
          BASE_VERSION=`poetry version -s`
          NEW_VERSION=`poetry version -s ${{ github.event.inputs.bump_rule }}`
          echo "Bumping version $BASE_VERSION > $NEW_VERSION"
          poetry run towncrier build --yes --version v$NEW_VERSION
          git commit -a -m "bump: version $BASE_VERSION -> $NEW_VERSION"
          git tag v$NEW_VERSION

          # Bump to alpha (so that future commits do not have the same
          # version as the tagged commit)
          BASE_VERSION=`poetry version -s`
          NEW_VERSION=`poetry version -s prerelease`
          echo "Bumping version $BASE_VERSION > $NEW_VERSION"
          git commit -a -m "bump(pre-release): version $BASE_VERSION > $NEW_VERSION"
          git push && git push --tags
