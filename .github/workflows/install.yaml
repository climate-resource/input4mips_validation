name: Test installation

on:
  pull_request:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # This means At 03:00 on Wednesday.
    # see https://crontab.guru/#0_0_*_*_3
    - cron:  '0 3 * * 3'

jobs:
  test-pypi-install:
    name: Test PyPI install ${{ matrix.install-target }} (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: [ "3.9", "3.10", "3.11" ]
        # Check both 'library' install and the 'application' (i.e. locked) install
        install-target: ["input4mips-validation", "input4mips-validation[locked]"]
    steps:
    - name: Set up Python "${{ matrix.python-version }}"
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Install
      run: |
        pip install --upgrade pip
        pip install "${{ matrix.install-target }}" >/dev/null 2>tmp.txt
        grep "WARN" tmp.txt && echo "Warnings in pip install output" && cat tmp.txt && exit 1
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Test installation
      run: |
        which python
        python scripts/test-install.py
    - name: Install pytest
      run: |
        pip install pytest
    - name: Run tests
      run: |
        pytest tests -r a -vv

  test-micromamba-installation:
    name: Test (micro)mamba install ${{ matrix.install-target }} (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: [ "3.9", "3.10", "3.11" ]
        # Check both 'library' install and the 'application' (i.e. locked) install
        install-target: ["input4mips-validation", "input4mips-validation-locked"]

    steps:
    - name: Setup (micro)mamba and install package
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: test-mamba-install
        create-args: >-
          python=${{ matrix.python-version }}
          -c conda-forge
          "${{ matrix.install-target }}"
        init-shell: bash
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Test installation
      shell: bash -leo pipefail {0}
      run: |
        which python
        python scripts/test-install.py
    - name: Install pytest
      shell: bash -leo pipefail {0}
      run: |
        mamba install pytest
    - name: Run tests
      shell: bash -leo pipefail {0}
      run: |
        pytest tests -r a -vv
